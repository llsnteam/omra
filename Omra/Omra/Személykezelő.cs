///////////////////////////////////////////////////////////
//  Személykezelõ.cs
//  Implementation of the Class Személykezelõ
//  Generated by Enterprise Architect
//  Created on:      02-ápr.-2016 10:16:29
//  Original author: gabi1_000
///////////////////////////////////////////////////////////




using Adatkezelõ;
using System.Collections.Generic;
using System.Linq;
using Omra;
using System.Diagnostics;
using System;

namespace Adatkezelõ {
	public class Személykezelõ : IDolgozókezelõ
    {
        DatabaseElements DE = new DatabaseElements();
        
		/// 
		/// <param name="azonosító"></param>
		/// <param name="jelszó"></param>
		public Dolgozó Azonosítás(string felhasználónév, string jelszó)
        {
            Dolgozó dolg = null;
            var talalat = from x in DE.Dolgozok  // kikeresi a megadott felhasználót
                            where x.nev == felhasználónév && x.jelszo == jelszó
                            select x;
            
            if (talalat.Count() != 0)
            {
                Dolgozok uj = talalat.First();
                dolg = new Dolgozó((Rang)Enum.Parse(typeof(Rang),uj.rang.ToString()), uj.jelszo, uj.nev, uj.lakcim, uj.dolgozoID);
            }

            return dolg; // null-t dob, ha nem létezik ez a dolgozó 
		}

		/// 
		/// <param name="dolgozók"></param>
		public Dolgozó DolgozóKeresés(List<Dolgozó> dolgozók){
            //keresésbe került?
			return null;
		}

		/// 
		/// <param name="dolgozó"></param>
		public void DolgozóMódosítása(Dolgozó dolgozó)
        {
            
		}
        
		/// 
		/// <param name="jelszó"></param>
		/// <param name="beosztás"></param>
		/// <param name="név"></param>
		/// <param name="azonosító"></param>
		/// <param name="lakcím"></param>
		public void ÚjDolgozó(string jelszó, Rang beosztás, string név, decimal azonosító, string lakcím){

		}
        
    }//end Személykezelõ

}//end namespace Adatkezelõ