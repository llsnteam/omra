///////////////////////////////////////////////////////////
//  Kimutatáskészítõ.cs
//  Implementation of the Class Kimutatáskészítõ
//  Generated by Enterprise Architect
//  Created on:      02-ápr.-2016 10:16:29
//  Original author: hallgato
///////////////////////////////////////////////////////////



using Omra;
using Adatkezelõ;
using System;
using System.Linq;
using System.Collections.Generic;
namespace Adatkezelõ {
	public class Kimutatáskészítõ
    {
        private KimutatasTipus tipus;
		private Kimutatás kimutatás;
        private List<StatAdat> adatok;

        public List<StatAdat> GetAdatok()
        {
			return this.adatok;
		}

        public KimutatasTipus GetKimutatásTípus()
        {
            return this.tipus;
        }

        public Kimutatáskészítõ(DateTime kezdet, DateTime vege, KimutatasTipus tipus)
        {
            this.kimutatás = new Kimutatás();
            kimutatás.ÚjKimutatás(vege,kezdet);
            this.tipus = tipus;
            adatok = new List<StatAdat>();
        }

        public void BûnesetKimutatás()
        {
            List<Bûneset> bûnesetek = this.kimutatás.GetAdatok;

            //a bûnesetek állapot szerinti csoportosítása
            var query = from x in bûnesetek
                         group x by x.GetÁllapot() into groups
                         select new {Állapot = groups.Key, Darab = groups.Count() };

            //StatAdat osztály típusba mentés, a könnyebb kezelés érdekében
            foreach (var akt in query)
	        {
                adatok.Add(new StatAdat() { Darab = akt.Darab, Csoport = akt.Állapot.ToString() });
	        }
        }

        public void BizonyítékKimutatás()
        {
            //Releváns bûnesetek
            List<Bûneset> bûnesetek = this.kimutatás.GetAdatok;

            List<string> bizonyitekok = new List<string>();

            DatabaseElements DE = new DatabaseElements();

            //Bizonyítékok nevének egy listába mentése
            foreach (var akt in bûnesetek)
            {
                var q = from x in DE.FelvettBizonyitekok
                        where x.bunesetID.ToString() == akt.GetAzonosító
                        select new { Nev = x.Bizonyitekok.megnevezes };

                foreach (var q_akt in q)
                {
                    bizonyitekok.Add(q_akt.Nev);
                }
            }

            //A bizonyítékok csoportosítása
            var query = bizonyitekok.GroupBy(x => x).Select(g => new { Állapot = g.Key, Darab = g.Count() });

            //StatAdat osztály típusba mentés, a könnyebb kezelés érdekében
            foreach (var akt in query)
            {
                adatok.Add(new StatAdat() { Darab = akt.Darab, Csoport = akt.Állapot.ToString() });
            }
        }
    }//end Kimutatáskészítõ


     //Ez itt az adatok tárolását szolgálja
    public class StatAdat
    {
        public int Darab { get; set; }
        public string Csoport { get; set; }
    }
}//end namespace Adatkezelõ