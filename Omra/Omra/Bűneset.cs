///////////////////////////////////////////////////////////
//  Bûneset.cs
//  Implementation of the Class Bûneset
//  Generated by Enterprise Architect
//  Created on:      02-ápr.-2016 10:16:28
//  Original author: Dániel
///////////////////////////////////////////////////////////




using Adatkezelõ;
using System;
using System.Collections.Generic;
using System.Linq;
using Omra;
namespace Adatkezelõ {
	public class Bûneset 
    {

		private decimal azonosító;

		private BÁllapot állapot;

        private DateTime felvetel;
        private DateTime? lezaras;

        private string leiras;

        private Dolgozó felelõsõrnagy;

        private DatabaseElements DE = new DatabaseElements();
        
		/// 
		/// <param name="azonosító"></param>
		public Bûneset(decimal azonosító, string leiras, Dolgozó felõrnagy){   //felvételhez
            this.azonosító = azonosító;

            this.állapot = BÁllapot.Folyamatban;
            this.felvetel = DateTime.Now;
            this.leiras = leiras;
            this.felelõsõrnagy = felõrnagy;
		}

        public Bûneset(decimal azonosító, BÁllapot allapot, DateTime felvetel, string leiras, DateTime? lezaras, Dolgozó felõrnagy)  //megjelenítéshez a keresésben
        {
            this.azonosító = azonosító;
            this.állapot = allapot;
            this.felvetel = felvetel;
            this.leiras = leiras;
            this.lezaras = lezaras;
            this.felelõsõrnagy = felõrnagy;
        }

		public BÁllapot Állapotmódosítás() // adatbázisban módosít
        {
            return állapot;
		}

		/// 
		/// <param name="Bûneset"></param>
		/// <param name="Bizonyíték"></param>
		public void BizonyítékHozzáadása(Bizonyíték Bizonyíték)
        {
            var ujfelvbiz = new FelvettBizonyitekok()
            {
                bunesetID = azonosító,
                bizonyitekID = Bizonyíték.GetAzonosító,
                felvetel_idopontja = DateTime.Now
            };
            DE.FelvettBizonyitekok.Add(ujfelvbiz);
            DE.SaveChanges();
		}

		public BÁllapot GetÁllapot(){

            return this.állapot;
		}

		public decimal GetAzonosító{
			get
            {
				return azonosító;
			}
		}

        public DateTime GetFelvetel
        {
            get
            {
                return felvetel;
            }
        }

        public DateTime? GetLezaras
        {
            get
            {
                return lezaras;
            }
        }

        public string GetLeiras
        {
            get
            {
                return leiras;
            }
        }

        public Dolgozó GetFelelõs
        {
            get
            {
                return felelõsõrnagy;
            }
        }

		/// 
		/// <param name="Gyanúsított"></param>
		public void GyanúsítottHozzáadása(Gyanúsított Gyanúsított)
        {
            var ujfelvgyan = new FelvettGyanusitottak()
            {
                bunesetID = azonosító,
                gyanusitottID = Gyanúsított.GetAzonosító(),
                felvetel_idopontja = DateTime.Now
            };
            DE.FelvettGyanusitottak.Add(ujfelvgyan);
            DE.SaveChanges();
		}

        public override string ToString()
        {
            return "ID:" + azonosító + " Állapot: " + állapot.ToString() + " Felvétel: " + felvetel.ToShortDateString() + "\n Leírás: " + leiras;
        }

	}//end Bûneset

}//end namespace Adatkezelõ