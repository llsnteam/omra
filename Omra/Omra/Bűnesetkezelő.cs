///////////////////////////////////////////////////////////
//  Bûnesetkezelõ.cs
//  Implementation of the Class Bûnesetkezelõ
//  Generated by Enterprise Architect
//  Created on:      02-ápr.-2016 10:16:28
//  Original author: Dániel
///////////////////////////////////////////////////////////




using Adatkezelõ;
using Omra;
using System;
using System.Collections.Generic;
using System.Linq;
namespace Adatkezelõ {
	public class Bûnesetkezelõ : IBûnesetkezelõ, IGyanúsítottkezelõ, IBizonyítékkezelõ 
    {
        DatabaseElements DE = new DatabaseElements();
        
		public decimal AzonosítóGenerálás(Bûneset buneset)
        {
            if(buneset!=null)
            {
                var meglevoID = from x in DE.Bunesetek
                               where x.bunesetID == buneset.GetAzonosító
                               select x.bunesetID;

                return meglevoID.First();
            }
            else
            {
                var utolsoID = from x in DE.Bunesetek
                               where x.bunesetID == DE.Bunesetek.Max(y => y.bunesetID)
                               select x.bunesetID;

                return utolsoID.First() + 1;
            }
		}

        public List<Gyanúsított> GyanúsítottakKigyûjtése(Bûneset bûneset)
        {
            List<Gyanúsított> gyanúsítottak = new List<Gyanúsított>();
            var gyanlista = from x in DE.FelvettGyanusitottak
                            where x.bunesetID == bûneset.GetAzonosító
                            select x.Gyanusitottak;

            foreach(var gyan in gyanlista)
                gyanúsítottak.Add(new Gyanúsított((GyanúsítottStátusz)Enum.Parse(typeof(GyanúsítottStátusz),gyan.statusz),gyan.nev,gyan.lakcim,gyan.gyanusitottID));

            return gyanúsítottak;
        }

        public List<Bizonyíték> BizonyítékokKigyûjtése(Bûneset bûneset)
        {
            List<Bizonyíték> bizonyíték = new List<Bizonyíték>();
            var bizlista = from x in DE.FelvettBizonyitekok
                            where x.bunesetID == bûneset.GetAzonosító
                            select x.Bizonyitekok;

            foreach (var biz in bizlista)
                bizonyíték.Add(new Bizonyíték(biz.bizonyitekID, biz.megnevezes, biz.felvetel));

            return bizonyíték;
        }

		/// 
		/// <param name="bizonyíték">ez kérdéses</param>
		/// <param name="bûneset"></param>
		public void BizonyítékHozzáadása(Bizonyíték bizonyíték, Bûneset bûneset){
            bûneset.BizonyítékHozzáadása(bûneset, bizonyíték);
		}
        
		/// 
		/// <param name="megnevezés"></param>
		public List<Bizonyíték> BizonyítékKeresés(string megnevezés){
            //nem is kellene ide ? -> kereséskezelõ valósítja meg
			return null;
		}

		/// 
		/// <param name="bûneset"></param>
		public void BûnesetÁllapotmódosítás(Bûneset bûneset){
            bûneset.Állapotmódosítás();
            //---------------------Adatbázisban módosítani
		}

		/// 
		/// <param name="Gyanúsított"></param>
		/// <param name="Bûneset"></param>
		public void GyanúsítottHozzáadása(Gyanúsított Gyanúsított, Bûneset Bûneset){
            Bûneset.GyanúsítottHozzáadása(Gyanúsított);
		}

		/// 
		/// <param name="megnevezés">Mint pl. kés, pisztoly stb.</param>
		/// <param name="azonosító"></param>
		public void ÚjBizonyíték(string megnevezés){
            Decimal azonosító = Convert.ToDecimal(AzonosítóGenerálás(null));

            //Bizonyíték b = new Bizonyíték(megnevezés, azonosító, DateTime.Now);
            
            var ujbizonyitek = new Bizonyitekok()
            {
                bizonyitekID = azonosító,
                megnevezes = megnevezés,
                felvetel = DateTime.Now
            };

            DE.Bizonyitekok.Add(ujbizonyitek);
            DE.SaveChanges();
		}

		/// 
		/// <param name="gyanúsított"></param>
		public void GyanúsítottMódosítása(Gyanúsított gyanúsított){
            
		}

		/// 
		/// <param name="gyanúsítottStátusz"></param>
		/// <param name="lakcím"></param>
		/// <param name="személyiAzonosító"></param>
		/// <param name="név"></param>
		public void ÚjGyanúsított(GyanúsítottStátusz gyanúsítottStátusz, string lakcím, decimal személyiAzonosító, string név){
            Gyanúsított gy = new Gyanúsított(gyanúsítottStátusz, név, lakcím, személyiAzonosító);
            //----------------------------------------gyanúsított az adatbázisba
		}

        public void ÚjBûneset(string leiras)
        {

        }
    }//end Bûnesetkezelõ

}//end namespace Adatkezelõ